version: '3.9'
services:
  app:
    container_name: stavkatv
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_PORT=${POSTGRES_PORT}
    build: .
    ports:
      - 8000:8080
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - postgresdb
      - redis

  postgresdb:
    image: postgres:latest
    container_name: postgresdb
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_HOST=${POSTGRES_HOST}
    ports:
      - '543:5432'
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    restart: always  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresdb:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable",
      ]
    command: ["up"]
    depends_on:
      postgresdb:
        condition: service_healthy
    restart: on-failure

  redis:
    image: redis:6.2-alpine
    restart: on-failure
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass strongPassword

volumes: 
  postgresdb:
    driver: local
  redis:
    driver: local